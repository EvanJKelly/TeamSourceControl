<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TUfOofAAAAAASUVORK5CYII=
</value>
  </data>
</root>